{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortGoodsByAlpabet","setState","ALPABET","sortGoodsByLength","LENGTH","reverseGoods","resetGoods","this","visibleGoods","goods","sort","prevGood","nextGood","localeCompare","length","reverse","getReorderedGoods","isChanged","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,kBAAoB,WAClB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,WAAa,WACX,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA7DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQd,GACN,KAAKL,EAASS,QACZ,OAAOS,EAASE,cAAcD,GAEhC,KAAKnB,EAASW,OACZ,OAAOO,EAASG,OAASF,EAASE,OAEpC,KAAKrB,EAASM,KACd,QACE,OAAO,MAITF,GACFW,EAAaO,UAGRP,EAqCgBQ,CAAkBtB,EAAiBa,KAAKX,OACvDqB,EAAYnB,IAAaL,EAASM,MAAQF,EAEhD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYtB,IAAaL,EAASS,UAEpCmB,QAASd,KAAKP,mBALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYtB,IAAaL,EAASW,SAEpCiB,QAASd,KAAKJ,kBALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAavB,IAEfwB,QAASd,KAAKF,aALhB,qBAUCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,WAHhB,sBAUJ,6BACE,6BACGE,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA/EtC,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.321a207c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return prevGood.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - nextGood.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortGoodsByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isChanged = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            })}\n            onClick={this.sortGoodsByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortGoodsByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {isChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetGoods}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}